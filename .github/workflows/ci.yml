name: CI

on: [push]

jobs:
  test:
    name: LLVM ${{ matrix.LLVM_VERSION }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
#        LLVM_VERSION: [3.9.0, 4.0.0, 5.0.0, 6.0.0, 7.0.0, 8.0.0, 9.0.0]
#        os: [ubuntu-18.04, macOS-10.15]
        LLVM_VERSION: [9.0.0]
        os: [ubuntu-18.04]

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true
      - name: Detect Mull version
        id: version
        run: |
          grep -Eo "MULL_VERSION [0-9.]+" CMakeLists.txt | awk ' { print $2 } '
          echo ::set-output name=version::`grep -Eo "MULL_VERSION [0-9.]+" CMakeLists.txt | awk ' { print $2 } '`
      - name: Run macOS
        if: matrix.os == 'macOS-10.15'
        run: |
          pip install ansible
          cd infrastructure && \
          ansible-playbook macos-playbook.yaml \
            -e llvm_version=${{ matrix.LLVM_VERSION }} \
            -e source_dir=$PWD/.. \
            -e gitref=$GITHUB_SHA \
            -e host=localhost \
            -e skip_package=true \
            -e skip_tests=false \
            -e SDKROOT=`xcrun -show-sdk-path` \
            --verbose
      - name: Run Ubuntu
        if: matrix.os == 'ubuntu-18.04'
        run: |
          sudo ln -s /usr/include/locale.h /usr/include/xlocale.h
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          cd infrastructure && \
          ansible-playbook ubuntu-playbook.yaml \
            -e llvm_version=${{ matrix.LLVM_VERSION }} \
            -e source_dir=$PWD/.. \
            -e gitref=$GITHUB_SHA \
            -e host=localhost \
            -e skip_package=false \
            -e skip_tests=true \
            --verbose
      - name: Publish package
        if: matrix.os == 'ubuntu-18.04'
        run: |
          file infrastructure/packages/Mull-${{ steps.version.outputs.version }}-LLVM-${{ matrix.LLVM_VERSION }}-ubuntu-18.04.deb
